from kyaml import KYAML
from os import getcwd
from os.path import exists
from out import KrappyError
from prompts.commandPrompt import CommandPrompt
from prompts.promptTypes import DiscordLibrary
from re import match
from writer import Writer


class CommandConstructor:
  """ Holds functions for generating a command. """

  def __init__(self) -> None: self.prompt = CommandPrompt()

  def gen_command(self) -> None:
    match self.prompt.get_library():
      case DiscordLibrary.DISCORD_JS: self.__gen_djs_command()
      case DiscordLibrary.DISCORD_PY: self.__gen_dpy_command()
      case DiscordLibrary.PYCORD: self.__gen_pycord_command()
      case DiscordLibrary.JDA: self.__gen_jda_command()
      case DiscordLibrary.CONCORD: self.__gen_concord_command()
      case DiscordLibrary.DISCATSHARP: self.__gen_discatsharp_command()
      case DiscordLibrary.DPP: self.__gen_dpp_command()
      case _: raise KrappyError("unknown library", 1)

  def __gen_djs_command(self) -> None:
    kyaml = KYAML(getcwd()).data
    options = kyaml["options"]
    path, language = options["path"], options["language"]

    cmdoptions = self.prompt.get_command_options()
    cn, cc = cmdoptions["cmdname"], cmdoptions["cmdcategory"]
    if not match(r"^[a-zA-Z][a-zA-Z]*$", cn): raise KrappyError("invalid command name: '%s'" %cn, 1)
    if not match(r"^[a-zA-Z][a-zA-Z]*$", cc): raise KrappyError("invalid command category: '%s'" %cc, 1)

    cmdname = f"{cn[0].upper()}{cn[1:]}Command"
    cmdfile = f"{cn[0].lower()}{cn[1:]}"
    cmdpath = f"{path}/src/commands/{cc}/{cmdfile}.{language}"

    if exists(cmdpath): raise KrappyError("%s command already exists" %cmdname, 1)
    if not exists(f"{path}/src/commands/{cc}"): raise KrappyError("'%s' not a subdir of 'src/commands'" %cc, 1)

    if language == "ts": Writer.write_src(f"""import {{ ChatInputCommandInteraction }} from 'discord.js';
import Bot from '../../bot';
import Command from '../../types/command';

export default class {cmdname} extends Command {{
  constructor() {{
    super({{
      data: {{
        name: '{cmdfile}',
        description: 'Generated by Krappy!'
      }},
      category: '{cc.upper()}'
    }});
  }}

  public async execute(interaction: ChatInputCommandInteraction, client: Bot) {{
    return await interaction.reply({{ content: 'Works!' }});
  }}
}}
""", cmdpath)  # TypeScript

    else: ...  # JavaScript.

  def __gen_dpy_command(self) -> None: print("To be supported...")
  def __gen_pycord_command(self) -> None: print("To be supported...")
  def __gen_jda_command(self) -> None: print("To be supported...")
  def __gen_concord_command(self) -> None: print("To be supported...")
  def __gen_discatsharp_command(self) -> None: print("To be supported...")
  def __gen_dpp_command(self) -> None: print("To be supported...")
